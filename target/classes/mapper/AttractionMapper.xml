<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper file : query가 들어 있음 -->
<mapper namespace="com.mvc.mapper.AttractionMapper">
	<select id="selectBySidoCode" parameterType="string" resultType="Attraction">
		select * from attraction_info where sido_code=#{sido_code}
	</select>
	
	<select id="selectBySidoCodeAndContentTypeId" parameterType="string" resultType="Attraction">
		select * from attraction_info 
		where sido_code=(
					select sido_code
					from sido
					where sido_name=#{sido_name}) 
			and content_type_id=(
					select content_type_id
					from content_type
					where content_type_name=#{content_type_name})
	</select>
	
	<select id="selectByContentId" parameterType="string" resultType="Attraction">
		select * from attraction_info as info, attraction_description as descri where info.content_id=#{content_id} and descri.content_id=#{content_id}
	</select>
	
	<select id="getMaxContentId" resultType="integer">
		select max(content_id) from attraction_info
	</select>
	
	<insert id="registration" parameterType="Attraction">
		insert into attraction_info(content_id, content_type_id, title, addr1, addr2, zipcode, tel, first_image, first_image2, sido_code, gugun_code, latitude, longitude, ad, user_id) values(#{content_id}, #{content_type_id}, #{title}, #{addr1}, #{addr2}, #{zipcode}, #{tel}, #{first_image}, #{first_image2}, #{sido_code}, #{gugun_code}, #{latitude}, #{longitude}, #{ad}, #{user_id})
	</insert>
	
	<delete id="delete" parameterType="string">
		delete from attraction_info where content_id=#{content_id}
	</delete>
	
	<update id="modify" parameterType="Attraction">
		update attraction_info set content_type_id = #{content_type_id}, title = #{title}, addr1 = #{addr1}, addr2 = #{addr2}, zipcode = #{zipcode}, tel = #{tel}, first_image = #{first_image}, first_image2 = #{first_image2}, sido_code = #{sido_code}, gugun_code = #{gugun_code}, latitude = #{latitude}, longitude = #{longitude}, ad = #{ad}, user_id = #{user_id} where content_id = #{content_id}
	</update>
	
	<select id="hotplace" resultType="Attraction">
		SELECT ai.* FROM attraction_info ai JOIN (SELECT al.content_id FROM attraction_like al GROUP BY al.content_id ORDER BY COUNT(*) DESC LIMIT 9) AS subquery ON ai.content_id = subquery.content_id
	</select>
	
	<insert id="like" parameterType="AttractionLike">
		INSERT INTO attraction_like VALUES(#{content_id}, #{user_id})
	</insert>
	
	<delete id="delete_like" parameterType="AttractionLike">
		DELETE FROM attraction_like WHERE content_id=#{content_id} AND user_id=#{user_id}
	</delete>
	
	<insert id="add_review" parameterType="AttractionReview">
		INSERT INTO attraction_review(user_id, content_id, review_content, creation_date) VALUES(#{user_id}, #{content_id}, #{review_content}, sysdate())
	</insert>
	
	<select id="get_review_info" parameterType="string" resultType="string">
		SELECT user_id FROM attraction_review WHERE review_id=#{review_id}
	</select>
	
	<delete id="delete_review" parameterType="string">
		DELETE FROM attraction_review WHERE review_id=#{review_id}
	</delete>
	
	<update id="modify_review" parameterType="string">
		update attraction_review set review_content=#{review_content} where review_id = #{review_id}
	</update>
	
	<select id="review_list" parameterType="string" resultType="AttractionReview">
		select * from attraction_review where content_id=#{content_id}
	</select>
	
	<select id="select_ad_attraction" resultType="Attraction">
		SELECT * FROM attraction_info WHERE ad = 1 ORDER BY RAND() LIMIT 3
	</select>
	
	<select id="islike" resultType="integer">
		select count(*) from attraction_like where content_id=#{content_id} and user_id=#{user_id}
	</select>
</mapper>